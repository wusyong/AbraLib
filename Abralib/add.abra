import AbraLib/types;

import AbraLib/fulladd;

template addFunc<T> [T] add<T> (lhs [T], rhs [T]) = {
  // use full adder but don't return the carry trit
  sum = fullAdd<T>(lhs, rhs, 0);
  return sum[1..];
};

use addFunc<Trit>;
use addFunc<Tryte>;
use addFunc<Tiny>;
use addFunc<Int>;
use addFunc<Huge>;
use addFunc<Hash>;
use addFunc<Hash3>;
use addFunc<Hash9>;
use addFunc<Signature>;

use addFunc<Trit2>;
use addFunc<Tryte2>;
use addFunc<Tiny2>;
use addFunc<Int2>;
use addFunc<Huge2>;

import AbraLib

// returns the n-th factorial number
// Java equivalent:
// return (n == 0) ? 1 : (n * factorial(n - 1));

// funny enough the maximum value for n! which still fits
// in a Huge integer is 33: 8.68331761881188649551819440128e+36

factorial (n [Huge]) = {

  // check if n equals 0
  zero = equal[signHuge(n), 0];

  // use null in recursion case when n was 0
  altN = nullOrHuge(not[zero], n);

  // calculate n - 1 for recursion case
  nMin1 = decHuge(altN);

  // return correct value
  nullOrHuge(zero, 1) \ mulHuge(n, factorial(nMin1));
}

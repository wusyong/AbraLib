import AbraLib/types;

// this function can be used as a cast operator
// for constants to cast them to specific size
// can be handy in this case for example:
// return f(a) & as<Tryte>(0) & f(b);

template asFunc<T> [T] as<T> (val [T]) = val;

use asFunc<Trit>;
use asFunc<Tryte>;
use asFunc<Tiny>;
use asFunc<Int>;
use asFunc<Huge>;
use asFunc<Hash>;
use asFunc<Hash3>;
use asFunc<Hash9>;
use asFunc<Signature>;

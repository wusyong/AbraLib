import AbraLib

// returns the n-th Fibonacci number
// Java equivalent:
// return (n == 0 || n == 1) ? n : (fib(n - 1) + fib(n - 2));

fibonacci (n [Int]) = {

  // check if n equals 0 or 1, which means return n
  retN = or[equalInt(n, 0), equalInt(n, 1)];

  // use null in recursion case when n was 0 or 1
  altN = nullOrInt(not[retN], n);

  // calculate n - 1 for recursion case
  nMin1 = decInt(altN);

  // calculate n - 2 for recursion case
  nMin2 = decInt(nMin1);

  // return correct value
  nullOrInt(retN, n) \ addInt(fibonacci(nMin1), fibonacci(nMin2));
}
